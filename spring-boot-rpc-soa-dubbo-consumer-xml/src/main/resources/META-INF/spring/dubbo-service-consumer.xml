<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       ">

  <!-- ======= application-shared ======= -->
  <!-- 消费方应用名，用于计算依赖关系（不是匹配条件，不要与提供方一样） -->
  <dubbo:application
      name="${dubbo.application.name}"
  />

  <!-- Registry: 服务注册与发现的注册中心 -->
  <!-- 使用Zookeeper注册中心暴露发现服务地址 -->
  <dubbo:registry
      address="${dubbo.registry.address}"
      protocol="${dubbo.registry.protocol:zookeeper}"
      group="${dubbo.registry.group}"
      client="${dubbo.registry.client:curator}"
      file="${dubbo.registry.file}"
      check="${dubbo.registry.check:true}"
  />


  <!-- ======= consumer-side ======= -->
  <!-- Consumer: 调用远程服务的服务消费方 -->
  <!--<dubbo:consumer-->
      <!--group="${dubbo.consumer.group:}"-->
      <!--check="${dubbo.consumer.check:true}"-->
  <!--/>-->

  <!-- Consumer: 调用远程服务的服务消费方 -->
  <!-- 生成远程服务代理，可以和本地服务一样使用远程服务 -->
  <!-- Type: consumers, routers -->
  <!-- proxy object for remote invocation -->
  <dubbo:reference
      id="demoService"
      interface="spring.guides.dubbo.service.DemoService"/>

</beans>