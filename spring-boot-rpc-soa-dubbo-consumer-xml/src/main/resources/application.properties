

# ======= Spring Boot =======
# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# LOGGING
# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.level.root=info
#logging.level.org.springframework=info
#logging.level.com.alibaba.dubbo=info

# IDENTITY (ContextIdApplicationContextInitializer)
# Application name.
spring.application.name=spring-boot-rpc-soa-dubbo-consumer


# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# Time in milliseconds that connectors will wait for another HTTP request before closing the connection.
# When not set, the connector's container-specific default will be used.
# connectionTimeout=socketProperties.getSoTimeout() (20000=20s, Socket读写超时时间)
server.connection-timeout=20000
# Context path of the application.
server.context-path=
# Display name of the application.
server.display-name=Dubbo服务消费方
# Path of the error controller.
server.error.path=/error
# Server HTTP port.
server.port=8080
# Path of the main dispatcher servlet.
server.servlet-path=/
# Maximum queue length for incoming connection requests
# when all possible request processing threads are in use. (100)
# 允许服务器开发者指定backlog值，用于服务器套接字（acceptCount）
server.tomcat.accept-count=1
# Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
server.tomcat.accesslog.directory=logs
# Enable access log.
server.tomcat.accesslog.enabled=true
# Format pattern for access logs.
# https://tomcat.apache.org/tomcat-7.0-doc/config/valve.html#Access_Log_Valve/Attributes
server.tomcat.accesslog.pattern=%{begin:yyyy-MM-dd HH:mm:ss.SSS}t  '%h %l %u' '"%{Referer}i" "%{User-Agent}i"' [%I] '"%r" %s %bB' '%Dms %Fms'
# Log file name prefix.
server.tomcat.accesslog.prefix=access_log
# Defer inclusion of the date stamp in the file name until rotate time.
server.tomcat.accesslog.rename-on-rotate=true
# Enable access log rotation.
server.tomcat.accesslog.rotate=true
# Log file name suffix.
server.tomcat.accesslog.suffix=.log
# HTTP Connector - https://tomcat.apache.org/tomcat-7.0-doc/config/http.html
# Maximum number of connections that the server will accept and process at any given time.
# BIO:maxThreads, NIO:10000, APR/native:8192
# 最大连接数，服务器在任何给定的时间将接受和处理（maxConnections=maxThreads+）
server.tomcat.max-connections=1000
# Maximum amount of worker threads. (200)
# 请求处理线程的最大数量（maxThreads）
server.tomcat.max-threads=500
# Minimum amount of worker threads. (10)
# 线程一直保持运行的最小数量（minSpareThreads）
# 建议：根据线上每台服务器的每秒平均请求量来设置，适当设置大一些，为突发流量做准备（qps * rt / 1000）
server.tomcat.min-spare-threads=30
# Character encoding to use to decode the URI.
server.tomcat.uri-encoding=UTF-8


# ======= Dubbo =======
## 应用信息配置：ApplicationConfig
### 当前应用名称，用于注册中心计算应用间依赖关系（必填）
dubbo.application.name=spring-boot-rpc-soa-dubbo-consumer
### 应用负责人，用于服务治理，请填写负责人公司邮箱前缀
dubbo.application.owner=dannong
### 日志输出方式，可选：slf4j,jcl,log4j,jdk
spring.dubbo.application.logger=slf4j

## 注册中心配置：RegistryConfig
## Zookeeper注册中心
### 注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔（必填）
dubbo.registry.address=127.0.0.1:2181
#dubbo.registry.address=zookeeper://127.0.0.1:2181
### 注册中心地址协议，支持dubbo, http, local三种协议（dubbo）
dubbo.registry.protocol=zookeeper
### 注册中心缺省端口，当address没有带端口时使用此端口做为缺省值（9090）
#dubbo.registry.port=9090
### 设置Zookeeper的根节点，不设置将使用无根树
dubbo.registry.group=dubbo_develop
### Zookeeper客户端，可选：zkclient,curator
dubbo.registry.client=curator
### 注册中心请求超时时间(毫秒)
#dubbo.registry.timeout=5000
### 注册中心会话超时时间(毫秒)，用于检测提供者非正常断线后的脏数据，比如用心跳检测的实现，此时间就是心跳间隔
#dubbo.registry.session=60000
### 使用文件缓存注册中心地址列表及服务提供者列表，应用重启时将基于此文件恢复
dubbo.registry.file=${user.home}/.dubbo/registry.cache
### 注册中心不存在时，是否报错
dubbo.registry.check=false
### 服务是否动态注册，如果设为false，注册后将显示后disable状态，需人工启用，
### 并且服务提供者停止时，也不会自动取消注册，需人工禁用
#dubbo.registry.dynamic=true

## 服务消费者配置：ConsumerConfig
### 远程服务调用超时时间(毫秒)
#dubbo.consumer.timeout=1000
### 远程服务调用重试次数，不包括第一次调用，不需要重试请设为0
#dubbo.consumer.retries=1
### 每个服务对每个提供者的最大连接数，rmi、http、hessian等短连接协议支持此配置，dubbo协议长连接不支持此配置
#dubbo.consumer.connections=100
### 启动时检查提供者是否存在，true报错，false忽略
#dubbo.consumer.check=true
### 生成动态代理方式，可选：jdk/javassist
#dubbo.consumer.proxy=javassist
#dubbo.consumer.actives=0
#dubbo.consumer.cluster=failover
#dubbo.consumer.init=false
#dubbo.consumer.group=develop


# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------

# Enable security.
management.security.enabled=false

