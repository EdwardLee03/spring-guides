
#### https://github.com/alibaba/druid/wiki/配置_LogFilter
logging.level.druid.sql.DataSource=warn
logging.level.druid.sql.Connection=warn
logging.level.druid.sql.Statement=warn
logging.level.druid.sql.ResultSet=warn


# ======= DataSource =======
datasource.test.database=test
# 数据库连接池配置
## https://github.com/alibaba/druid/wiki/DruidDataSource配置属性列表
## https://github.com/alibaba/druid/wiki/DruidDataSource配置
### 最大连接池数量（20）
#### https://github.com/alibaba/druid/wiki/各种连接池性能对比测试
datasource.test.maxActive=50
### 初始化时建立物理连接的个数
datasource.test.initialSize=1
### 最小连接池数量
datasource.test.minIdle=1
### 对连接进行保活处理
#### https://github.com/alibaba/druid/wiki/KeepAlive_cn
datasource.test.keepAlive=true
### 获取连接时最大等待时间（60000=60s）
datasource.test.maxWait=60000
### 是否缓存preparedStatement(PSCache)（在MySQL下建议关闭）
datasource.test.poolPreparedStatements=false
### 用来检测连接是否为有效的SQL
datasource.test.validationQuery=select 'x'
### 检测连接是否为有效的超时时间（单位：秒）
datasource.test.validationQueryTimeout=1
### 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
### 建议配置为true，不影响性能，并且保证安全性
datasource.test.testWhileIdle=true
### 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.test.testOnBorrow=false
### 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.test.testOnReturn=false
### 连接驱逐运行间隔时间（60000=60s）
datasource.test.timeBetweenEvictionRunsMillis=60000
### 连接保持空闲而不被驱逐的最长时间（300000=5min）
datasource.test.minEvictableIdleTimeMillis=300000
### 通过别名的方式配置扩展插件
#### https://github.com/alibaba/druid/wiki/内置Filter的别名
#### https://github.com/alibaba/druid/wiki/简介_WallFilter
#### https://github.com/alibaba/druid/wiki/配置-wallfilter
#### https://github.com/alibaba/druid/wiki/配置druid内置的log实现
datasource.test.filters=wall,stat,log4j2,slf4j
### 定期输出统计信息到日志
#### https://github.com/alibaba/druid/wiki/定时输出统计信息到日志中
#### https://github.com/alibaba/druid/wiki/怎么保存Druid的监控记录
datasource.test.timeBetweenLogStatsMillis=300000
#### https://github.com/alibaba/druid/wiki/配置_StatFilter
## com.alibaba.druid.filter.stat.StatFilter
druid.stat.slowSqlMillis=1000
druid.stat.logSlowSql=true

