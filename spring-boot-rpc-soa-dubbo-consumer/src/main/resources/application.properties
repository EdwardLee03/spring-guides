
# ======= Dubbo =======
## ApplicationConfig
dubbo.application.name=spring-boot-rpc-soa-dubbo-consumer
dubbo.application.owner=dannong
dubbo.application.version=0.1.0
## RegistryConfig
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
#dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.registry.client=zkclient
dubbo.registry.group=credit-card
#dubbo.registry.dynamic=true
#dubbo.registry.timeout=1000
#dubbo.registry.session=1000

## 服务消费者配置：ConsumerConfig
### 远程服务调用超时时间(毫秒)
dubbo.consumer.timeout=1000
### 远程服务调用重试次数，不包括第一次调用，不需要重试请设为0
dubbo.consumer.retries=1
### 负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用
dubbo.consumer.loadbalance=leastactive
### 是否缺省异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程
#dubbo.consumer.async=false
### 每个服务对每个提供者的最大连接数，rmi、http、hessian等短连接协议支持此配置，dubbo协议长连接不支持此配置
dubbo.consumer.connections=100
### 是否缺省泛化接口，如果为泛化接口，将返回GenericService
#dubbo.consumer.generic=false
### 启动时检查提供者是否存在，true报错，false忽略
dubbo.consumer.check=true
### 生成动态代理方式，可选：jdk/javassist
#dubbo.consumer.proxy=javassist
#dubbo.consumer.actives=0
#dubbo.consumer.cluster=failover
#dubbo.consumer.init=false
dubbo.consumer.group=develop

## ReferenceConfig
#dubbo.reference.id=服务引用BeanId
#dubbo.reference.interface=服务接口名
#dubbo.reference.version=与服务提供者的版本一致
#dubbo.reference.group=
#dubbo.reference.timeout=
#dubbo.reference.retries=
#dubbo.reference.connections=
#dubbo.reference.actives=0
#dubbo.reference.cluster=failover



#logging.level.root=warn
logging.level.com=debug
