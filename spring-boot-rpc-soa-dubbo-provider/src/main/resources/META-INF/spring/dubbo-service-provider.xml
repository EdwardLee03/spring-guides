<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       ">

  <!-- ======= application-shared ======= -->
  <!-- 提供方应用信息，用于计算依赖关系 -->
  <dubbo:application
      name="${dubbo.application.name}"
  />

  <!-- Registry: 服务注册与发现的注册中心 -->
  <!-- 使用Zookeeper注册中心暴露服务地址 -->
  <dubbo:registry
      address="${dubbo.registry.address}"
      protocol="${dubbo.registry.protocol:zookeeper}"
      group="${dubbo.registry.group}"
      client="${dubbo.registry.client:curator}"
      file="${dubbo.registry.file}"
      check="${dubbo.registry.check:true}"
  />


  <!-- ======= provider-side ======= -->
  <!-- 用dubbo协议在20880端口暴露服务 -->
  <dubbo:protocol
      name="${dubbo.protocol.name:dubbo}"
      port="${dubbo.protocol.port:20880}"
      threadpool="${dubbo.protocol.threadpool:fixed}"
      threads="${dubbo.protocol.threads:100}"
      accepts="${dubbo.protocol.accepts:0}"
      accesslog="${dubbo.protocol.accesslog:false}"
  />

  <!-- 服务提供者 -->
  <!-- Provider: 暴露服务的服务提供方 -->
  <!--<dubbo:provider-->
      <!--group="${dubbo.provider.group:}"-->
      <!--delay="${dubbo.provider.delay:0}"-->
      <!--timeout="${dubbo.provider.timeout:1000}"-->
      <!--retries="${dubbo.provider.retries:2}"-->
      <!--connections="${dubbo.provider.connections:0}"-->
      <!--loadbalance="${dubbo.provider.loadbalance:random}"-->
      <!--async="${dubbo.provider.async:false}"-->
      <!--stub="${dubbo.provider.stub:false}"-->
      <!--mock="${dubbo.provider.mock:false}"-->
      <!--cluster="${dubbo.provider.cluster:failover}"-->
      <!--queues="${dubbo.provider.queues:0}"-->
  <!--/>-->

  <!-- 声明需要暴露的服务接口 -->
  <!-- Type: providers, configurators -->
  <dubbo:service
      interface="spring.guides.dubbo.service.DemoService"
      ref="demoService"
      timeout="1000" retries="1"
  />

</beans>